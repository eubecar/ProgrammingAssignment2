available.packages()
clc
install.packages("KernSmooth")
library(KernSmooth)
library(datasets)
data(iris)
?iris
Sepal.Length
iris$Sepal.Length
mean(iris$Sepal.Length)
iris
iris[Species="virginica"]
iris[Species]
iris
x<-subset(iris,Species="virginica");
x
x
x<-subset(iris,Species=="virginica");
x
mean(x$Sepal.Length)
round(mean(x$Sepal.Length))
apply(iris, 1, mean)
apply(iris, 2, mean)
iris
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars, 2, mean)
z<-tapply(mtcars$hp, mtcars$cyl, mean)
z
abs(z[3]-z[1])
round(abs(z[3]-z[1]))
z[3]
z[1]
debug(ls)
n
ls
setwd("~/DataScience/Course_02/gitRep/ProgrammingAssignment2")
source("cachematrix.R")
x=matrix(runif(9),3,3)
x
y=makeCacheMatrix(x);
cacheSolve(y)
z=cacheSolve(y)
z=cacheSolve(y)
x%*%z
